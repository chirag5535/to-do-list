{"ast":null,"code":"var _jsxFileName = \"/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/ToDo_Cutline.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Compo1 from \"./Compo1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorageDAta = () => {\n  let list = localStorage.getItem(\"lists\");\n\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n\nconst ToDo_Cutline = () => {\n  _s();\n\n  const [setitem, setNewItem] = useState(\"\");\n  const [newdata, newSetData] = useState(getLocalStorageDAta());\n\n  const itemEvent = event => {\n    setNewItem(event.target.value);\n  };\n\n  const clickItem = () => {\n    newSetData(oldData => {\n      return [...oldData, setitem];\n    });\n    setNewItem(\"\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(newdata));\n  }, [newdata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Task\",\n        value: setitem,\n        onChange: itemEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickItem,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: newdata.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(Compo1, {\n            text: val\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo_Cutline, \"9F017wTmWnUJUBPnkRPgaUsA1PM=\");\n\n_c = ToDo_Cutline;\nexport default ToDo_Cutline;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo_Cutline\");","map":{"version":3,"sources":["/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/ToDo_Cutline.jsx"],"names":["React","useState","useEffect","Compo1","getLocalStorageDAta","list","localStorage","getItem","JSON","parse","ToDo_Cutline","setitem","setNewItem","newdata","newSetData","itemEvent","event","target","value","clickItem","oldData","setItem","stringify","map","val","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,MAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;;AACA,MAAIF,IAAJ,EAAU;AACR,WAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAPD;;AAQA,MAAMG,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACG,mBAAmB,EAApB,CAAtC;;AAEA,QAAMW,SAAS,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACtBL,IAAAA,UAAU,CAAEM,OAAD,IAAa;AACtB,aAAO,CAAC,GAAGA,OAAJ,EAAaT,OAAb,CAAP;AACD,KAFS,CAAV;AAGAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8Bb,IAAI,CAACc,SAAL,CAAeT,OAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,KAAK,EAAEF,OAHT;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AAAQ,QAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,kBACGN,OAAO,CAACU,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,8BAAO,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAED;AAAd,aAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCD;;GAAMf,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Compo1 from \"./Compo1\";\n\nconst getLocalStorageDAta = () => {\n  let list = localStorage.getItem(\"lists\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\nconst ToDo_Cutline = () => {\n  const [setitem, setNewItem] = useState(\"\");\n  const [newdata, newSetData] = useState(getLocalStorageDAta());\n\n  const itemEvent = (event) => {\n    setNewItem(event.target.value);\n  };\n  const clickItem = () => {\n    newSetData((oldData) => {\n      return [...oldData, setitem];\n    });\n    setNewItem(\"\");\n  };\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(newdata));\n  }, [newdata]);\n\n  return (\n    <div className=\"main_div\">\n      <div className=\"center_div\">\n        <br />\n        <h1>TODo List</h1>\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"Enter Your Task\"\n          value={setitem}\n          onChange={itemEvent}\n        />\n        <button onClick={clickItem}>+</button>\n        <ol>\n          {newdata.map((val, index) => {\n            return <Compo1 text={val} key={index} />;\n          })}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo_Cutline;\n"]},"metadata":{},"sourceType":"module"}