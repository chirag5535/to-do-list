{"ast":null,"code":"import _toConsumableArray from\"/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Compo1 from\"./Compo1\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getLocalStorageDAta=function getLocalStorageDAta(){var list=localStorage.getItem(\"lists2\");if(list){return JSON.parse(localStorage.getItem(\"lists2\"));}else{return[];}};var ToDo_CutLine=function ToDo_CutLine(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),setitem=_useState2[0],setNewItem=_useState2[1];var _useState3=useState(getLocalStorageDAta()),_useState4=_slicedToArray(_useState3,2),newdata=_useState4[0],newSetData=_useState4[1];var itemEvent=function itemEvent(event){setNewItem(event.target.value);};var clickItem=function clickItem(){newSetData(function(oldData){return[].concat(_toConsumableArray(oldData),[setitem]);});setNewItem(\"\");};useEffect(function(){localStorage.setItem(\"lists2\",JSON.stringify(newdata));},[newdata]);return/*#__PURE__*/_jsx(\"div\",{className:\"main_div\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"center_div\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\"TODo List\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Your Task\",value:setitem,onChange:itemEvent}),/*#__PURE__*/_jsx(\"button\",{onClick:clickItem,children:\"+\"}),/*#__PURE__*/_jsx(\"ol\",{children:newdata.map(function(val,index){return/*#__PURE__*/_jsx(Compo1,{text:val},index);})})]})});};export default ToDo_CutLine;","map":{"version":3,"sources":["/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/ToDo_CutLine.jsx"],"names":["React","useState","useEffect","Compo1","getLocalStorageDAta","list","localStorage","getItem","JSON","parse","ToDo_CutLine","setitem","setNewItem","newdata","newSetData","itemEvent","event","target","value","clickItem","oldData","setItem","stringify","map","val","index"],"mappings":"sSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,GAAIC,CAAAA,IAAI,CAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CACA,GAAIF,IAAJ,CAAU,CACR,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAP,CACD,CAFD,IAEO,CACL,MAAO,EAAP,CACD,CACF,CAPD,CAQA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,cAA8BT,QAAQ,CAAC,EAAD,CAAtC,wCAAOU,OAAP,eAAgBC,UAAhB,eACA,eAA8BX,QAAQ,CAACG,mBAAmB,EAApB,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3BJ,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CACD,CAFD,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBL,UAAU,CAAC,SAACM,OAAD,CAAa,CACtB,mCAAWA,OAAX,GAAoBT,OAApB,GACD,CAFS,CAAV,CAGAC,UAAU,CAAC,EAAD,CAAV,CACD,CALD,CAMAV,SAAS,CAAC,UAAM,CACdI,YAAY,CAACe,OAAb,CAAqB,QAArB,CAA+Bb,IAAI,CAACc,SAAL,CAAeT,OAAf,CAA/B,EACD,CAFQ,CAEN,CAACA,OAAD,CAFM,CAAT,CAIA,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,aAAK,SAAS,CAAC,YAAf,wBACE,aADF,cAEE,iCAFF,cAGE,aAHF,cAIE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,iBAFd,CAGE,KAAK,CAAEF,OAHT,CAIE,QAAQ,CAAEI,SAJZ,EAJF,cAUE,eAAQ,OAAO,CAAEI,SAAjB,eAVF,cAWE,oBACGN,OAAO,CAACU,GAAR,CAAY,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC3B,mBAAO,KAAC,MAAD,EAAQ,IAAI,CAAED,GAAd,EAAwBC,KAAxB,CAAP,CACD,CAFA,CADH,EAXF,GADF,EADF,CAqBD,CAtCD,CAwCA,cAAef,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Compo1 from \"./Compo1\";\n\nconst getLocalStorageDAta = () => {\n  let list = localStorage.getItem(\"lists2\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists2\"));\n  } else {\n    return [];\n  }\n};\nconst ToDo_CutLine = () => {\n  const [setitem, setNewItem] = useState(\"\");\n  const [newdata, newSetData] = useState(getLocalStorageDAta());\n\n  const itemEvent = (event) => {\n    setNewItem(event.target.value);\n  };\n  const clickItem = () => {\n    newSetData((oldData) => {\n      return [...oldData, setitem];\n    });\n    setNewItem(\"\");\n  };\n  useEffect(() => {\n    localStorage.setItem(\"lists2\", JSON.stringify(newdata));\n  }, [newdata]);\n\n  return (\n    <div className=\"main_div\">\n      <div className=\"center_div\">\n        <br />\n        <h1>TODo List</h1>\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"Enter Your Task\"\n          value={setitem}\n          onChange={itemEvent}\n        />\n        <button onClick={clickItem}>+</button>\n        <ol>\n          {newdata.map((val, index) => {\n            return <Compo1 text={val} key={index} />;\n          })}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo_CutLine;\n"]},"metadata":{},"sourceType":"module"}