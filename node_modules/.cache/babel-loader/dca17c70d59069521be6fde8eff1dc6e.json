{"ast":null,"code":"var _jsxFileName = \"/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/TODO_List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"lists\"); // console.log(list);\n\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n\nconst TODO_List = () => {\n  _s();\n\n  const [setitem, setNewItem] = useState(\"\");\n  const [newdata, newSetData] = useState(getLocalStorage());\n\n  const itemEvent = event => {\n    setNewItem(event.target.value);\n  };\n\n  const clickItem = () => {\n    newSetData(oldData => {\n      const allData = {\n        id: new Date().getMilliseconds(),\n        name: setitem\n      }; // console.log(allData.id);\n      // console.log(allData.name);\n\n      return [...oldData, allData];\n    });\n    setNewItem(\"\");\n  };\n\n  const deleteItem = id => {\n    console.log(id);\n    newSetData(oldData => {\n      const updateData = oldData.filter((arr, num) => {\n        console.log(num.id);\n        return id !== num.id;\n      });\n      newSetData(updateData);\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(newdata));\n  }, [newdata]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Your Name\",\n          onChange: itemEvent,\n          value: setitem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickItem,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: newdata.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo_style\",\n              id: val.id,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-times\",\n                \"aria-hidden\": \"true\",\n                onClick: () => deleteItem(val.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TODO_List, \"m0hi/mrAv2xvecAY0PfJHGCJt2g=\");\n\n_c = TODO_List;\nexport default TODO_List;\n\nvar _c;\n\n$RefreshReg$(_c, \"TODO_List\");","map":{"version":3,"sources":["/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/TODO_List.jsx"],"names":["React","useState","useEffect","getLocalStorage","list","localStorage","getItem","JSON","parse","TODO_List","setitem","setNewItem","newdata","newSetData","itemEvent","event","target","value","clickItem","oldData","allData","id","Date","getMilliseconds","name","deleteItem","console","log","updateData","filter","arr","num","setItem","stringify","map","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"lists\");\n  // console.log(list);\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n\nconst TODO_List = () => {\n  const [setitem, setNewItem] = useState(\"\");\n  const [newdata, newSetData] = useState(getLocalStorage());\n\n  const itemEvent = (event) => {\n    setNewItem(event.target.value);\n  };\n  const clickItem = () => {\n    newSetData((oldData) => {\n      const allData = { id: new Date().getMilliseconds(), name: setitem };\n      // console.log(allData.id);\n      // console.log(allData.name);\n      return [...oldData, allData];\n    });\n    setNewItem(\"\");\n  };\n\n  const deleteItem = (id) => {\n    console.log(id);\n    newSetData((oldData) => {\n      const updateData = oldData.filter((arr, num) => {\n        console.log(num.id);\n        return id !== num.id;\n      });\n      newSetData(updateData);\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(newdata));\n  }, [newdata]);\n\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br />\n          <h1>TODo List</h1>\n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"Enter Your Name\"\n            onChange={itemEvent}\n            value={setitem}\n          ></input>\n          <button onClick={clickItem}>+</button>\n          <ol>\n            {newdata.map((val) => {\n              return (\n                <div className=\"todo_style\" key={val.id} id={val.id}>\n                  <i\n                    className=\"fa fa-times\"\n                    aria-hidden=\"true\"\n                    onClick={() => deleteItem(val.id)}\n                  ></i>\n                  <li>{val.name}</li>\n                </div>\n              );\n            })}\n          </ol>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TODO_List;\n"]},"metadata":{},"sourceType":"module"}