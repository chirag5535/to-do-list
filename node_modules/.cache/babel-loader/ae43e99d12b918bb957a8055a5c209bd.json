{"ast":null,"code":"var _jsxFileName = \"/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/Loginform.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Loginform() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [allData, setAllData] = useState([]);\n\n  const getData = event => {\n    event.preventDefault();\n    const allEntry = {\n      email: email,\n      password: password\n    };\n    setAllData([...allData, allEntry]);\n    console.log(setAllData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getData,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          autoComplete: \"off\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          autoComplete: \"off\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allData.map(currElem => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: currElem.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currElem.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Loginform, \"6V3xM5kio3RwXITwx4/rzfyPlcs=\");\n\n_c = Loginform;\nexport default Loginform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"sources":["/Users/chiragsheta/Documents/WorkSpace/reactHook/example1/src/Loginform.jsx"],"names":["React","useState","Loginform","email","setEmail","password","setPassword","allData","setAllData","getData","event","preventDefault","allEntry","console","log","target","value","map","currElem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAG;AAAET,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,QAAQ,EAAEA;AAA1B,KAAjB;AACAG,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaK,QAAb,CAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACD,GAND;;AAQA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,OAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,YAAY,EAAC,KAJf;AAKE,UAAA,KAAK,EAAEN,KALT;AAME,UAAA,QAAQ,EAAGO,KAAD,IAAWN,QAAQ,CAACM,KAAK,CAACK,MAAN,CAAaC,KAAd;AAN/B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,YAAY,EAAC,KAJf;AAKE,UAAA,KAAK,EAAEX,QALT;AAME,UAAA,QAAQ,EAAGK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd;AANlC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0BE;AAAA,kBACGT,OAAO,CAACU,GAAR,CAAaC,QAAD,IAAc;AACzB,8BACE;AAAA,oCACE;AAAA,wBAAIA,QAAQ,CAACf;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAIe,QAAQ,CAACb;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,0BADF;AAMD,SAPA;AADH;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyCD;;GAvDQH,S;;KAAAA,S;AAyDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Loginform() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [allData, setAllData] = useState([]);\n\n  const getData = (event) => {\n    event.preventDefault();\n\n    const allEntry = { email: email, password: password };\n    setAllData([...allData, allEntry]);\n    console.log(setAllData);\n  };\n\n  return (\n    <>\n      <form onSubmit={getData}>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            autoComplete=\"off\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"password\">password</label>\n          <br />\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          ></input>\n        </div>\n        <button type=\"submit\">Login</button>\n        <div>\n          {allData.map((currElem) => {\n            return (\n              <>\n                <p>{currElem.email}</p>\n                <p>{currElem.password}</p>\n              </>\n            );\n          })}\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Loginform;\n"]},"metadata":{},"sourceType":"module"}